 AWSTemplateFormatVersion: '2010-09-09'
 Description: 'Continuous Delivery Pipeline'
 Parameters: 
  AppName: 
    Description: 'The name of the application'
    Type: String 
  GitHubUser: 
    Description: 'The user of the GitHub repository, must have access to the GitHubToken'
    Type: String
  GitHubOAuthToken:
    Description: 'The OAuthToken of the GitHub user'
    Type: String
  GitHubRepo:
    Description: 'The GitHub repository'
    Type: String 
  GitHubRepoBranch:
    Description: 'The GitHub repository branch'
    Type: String
 Resources:
    S3ArtifactBucket: 
      Description: 'S3 Bucket for storing build artifacts'
      Type: 'AWS::S3::Bucket'
      Properties: 
        BucketName: !Sub 'build-${AppName}-s3-${AWS::Region}'      
        VersioningConfiguration:
          Status: Enabled
    S3ArtifactBucketPolicy:
      DependsOn:
      - S3ArtifactBucket
      Description: Setting Amazon S3 bucket policy for external and AWS CodePipeline access
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3ArtifactBucket
        PolicyDocument:
          Version: '2012-10-17'
          Id: SSEAndSSLPolicy
          Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: "*"
            Action: s3:PutObject
            Resource: !Sub '${S3ArtifactBucket.Arn}/*'
            Condition:
              StringNotEquals:
                s3:x-amz-server-side-encryption: aws:kms
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource: !Sub '${S3ArtifactBucket.Arn}/*'
            Condition:
              Bool:
                aws:SecureTransport: 'false'   
    CodePipelineIAMRole:
      Type: 'AWS::IAM::Role'
      Description: 'Creating service role in IAM for AWS CodePipeline'
      Properties:
        AssumeRolePolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: 
                - 'codepipeline.amazonaws.com'
              Action:
              - 'sts:AssumeRole'
        Policies:
          # https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-custom-role.html
          - PolicyName: CodePipelineIAMRolePolicy
            PolicyDocument:
              Statement:
              - Action:
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                - s3:PutObject
                Resource:
                - arn:aws:s3:::codepipeline*
                - arn:aws:s3:::elasticbeanstalk*
                Effect: Allow
              - Action:
                - codecommit:CancelUploadArchive
                - codecommit:GetBranch
                - codecommit:GetCommit
                - codecommit:GetUploadArchiveStatus
                - codecommit:UploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                - codedeploy:CreateDeployment
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:RegisterApplicationRevision
                Resource: "*"
                Effect: Allow
              - Action:
                - elasticbeanstalk:*
                - ec2:*
                - elasticloadbalancing:*
                - autoscaling:*
                - cloudwatch:*
                - s3:*
                - sns:*
                - cloudformation:*
                - rds:*
                - sqs:*
                - ecs:*
                - iam:PassRole
                Resource: "*"
                Effect: Allow
              - Action:
                - lambda:InvokeFunction
                - lambda:ListFunctions
                Resource: "*"
                Effect: Allow
              - Action:
                - opsworks:CreateDeployment
                - opsworks:DescribeApps
                - opsworks:DescribeCommands
                - opsworks:DescribeDeployments
                - opsworks:DescribeInstances
                - opsworks:DescribeStacks
                - opsworks:UpdateApp
                - opsworks:UpdateStack
                Resource: "*"
                Effect: Allow
              - Action:
                - codebuild:BatchGetBuilds
                - codebuild:StartBuild
                Resource: "*"
                Effect: Allow
              Version: '2012-10-17'
        Path: '/'
        RoleName: !Sub 'codepipeline-${AppName}-role-iam-${AWS::Region}'
    CodePipeline:
      Type: 'AWS::CodePipeline::Pipeline'
      Properties: 
        ArtifactStore:
          Location: !Ref S3ArtifactBucket
          Type: S3
        RoleArn: !Sub '${CodePipelineIAMRole.Arn}'
        Stages:
          - Name: Source
            Actions: 
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
              - Name: !Sub 'sourceoutput-${AppName}-codepipeline-${AWS::Region}'
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubRepoBranch
                OAuthToken: !Ref GitHubOAuthToken
          - Name: Build
            Actions:
            - Name: Build
              InputArtifacts:
              - Name: !Sub 'sourceoutput-${AppName}-codepipeline-${AWS::Region}' 
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
              - Name: !Sub 'buildoutput-${AppName}-codepipeline-${AWS::Region}'
              Configuration:
                ProjectName: !Sub 'website-${AppName}-codebuild-${AWS::Region}'
              RunOrder: 1                 
    CodeBuildIAMRole:
      Type: AWS::IAM::Role
      Description: 'Role for CodeBuild Service'
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service: 
              - codebuild.amazonaws.com
            Action: 
            - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: CodeBuildIAMRolePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  Effect: Allow
                  Resource: '*'
                - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  Effect: Allow
                  Resource: 
                  - arn:aws:s3:::codepipeline-us-east-1-*
                  - !Sub '${S3ArtifactBucket.Arn}/*'
        RoleName: !Sub 'codebuild-${AppName}-role-iam-${AWS::Region}'
    CodeBuild:
      Description: 'AWS CodeBuild Project'
      Type: 'AWS::CodeBuild::Project'
      Properties:
        Artifacts: 
          Type: 'CODEPIPELINE'
        Description: 'Build stage of the CodePipeline'
        Environment:
          ComputeType: 'BUILD_GENERAL1_SMALL'
          Image: 'aws/codebuild/nodejs:7.0.0'
          Type: 'LINUX_CONTAINER'
        Name: !Sub 'website-${AppName}-codebuild-${AWS::Region}'
        ServiceRole: !Sub '${CodeBuildIAMRole.Arn}'
        Source: 
          Type: 'CODEPIPELINE'
        TimeoutInMinutes: 5
